{
  "name": "testrunner",
  "displayName": "CDMtestRunner",
  "publisher": "AbdelhakNEZZARI",
  "description": "run tests from gherkin files",
  "repository": "https://github.com/abdelhaknezzari/testrunner",
  "version": "0.0.13",
  "icon": "spaceship.png",
  "engines": {
    "vscode": "^1.79.0"
  },
  "categories": [
    "Other"
  ],
  "activationEvents": [
    "onCommand:testRunner.runCurrentFeature",
    "onCommand:testRunner.runCurrentScenario",
    "onCommand:testRunner.runScenariosAfterwards",
    "onCommand:testRunner.runFailedFeature",
    "onCommand:testRunner.runTillFailedScenario",
    "workspaceContains:*.md"
  ],
  "browser": "./dist/web/extension.js",
  "contributes": {
    "commands": [
      {
        "when": "resourceLangId == feature",
        "command": "testRunner.runCurrentScenario",
        "title": "Run scenario"
      },
      {
        "when": "resourceLangId == feature",
        "command": "testRunner.runCurrentFeature",
        "title": "Run feature"
      },
      {
        "when": "resourceLangId == feature",
        "command": "testRunner.runPullReqestFailingScenarios",
        "title": "Run failing scenarios of Pull Request"
      },
      {
        "when": "resourceLangId == feature",
        "command": "testRunner.runScenariosAfterwards",
        "title": "Run from current scenario"
      },
      {
        "when": "resourceLangId == feature",
        "command": "testRunner.runTillFailedScenario",
        "title": "Run failed feature till failed scenario"
      },
      {
        "when": "resourceLangId == feature",
        "command": "testRunner.runFailedFeature",
        "title": "Run failed feature file"
      }

    ],
    "menus": {
      "explorer/context": [
        {
          "when": "resourceExtname == .feature",
          "command": "testRunner.runCurrentFeature",
          "title": "Run feature"
        },
        {
          "when": "resourceExtname == .feature",
          "command": "testRunner.runPullReqestFailingScenarios",
          "title": "Run failing scenarios of Pull Request"
        },
        {
          "when": "resourceExtname == .feature",
          "command": "testRunner.runTillFailedScenario",
          "title": "Run failed feature till failed scenario"
        },
        {
          "when": "resourceExtname == .feature",
          "command": "testRunner.runFailedFeature",
          "title": "Run failed feature file"
        }
      ],
      "editor/context": [
        {
          "when": "resourceExtname == .feature",
          "command": "testRunner.runCurrentScenario",
          "title": "Run scenario"
        },
        {
          "when": "resourceExtname == .feature",
          "command": "testRunner.runCurrentFeature",
          "title": "Run feature"
        },
        {
          "when": "resourceExtname == .feature",
          "command": "testRunner.runPullReqestFailingScenarios",
          "title": "Run failing scenarios of Pull Request"
        },
        {
          "when": "resourceLangId == feature",
          "command": "testRunner.runScenariosAfterwards",
          "title": "Run from current scenario"
        },
        {
          "when": "resourceExtname == .feature ",
          "command": "testRunner.runTillFailedScenario",
          "title": "Run failed feature till failed scenario"
        },
        {
          "when": "resourceExtname == .feature",
          "command": "testRunner.runFailedFeature",
          "title": "Run failed feature file"
        }
      ],
      "editor/title": [
        {
          "when": "!inQuickOpen && !inMenuBar && !inPanel && (resourceExtname == .feature || resourceExtname == .features)",
          "command": "testRunner.runCurrentScenario",
          "title": "Run scenario",
          "group": "navigation@-1001"
        },
        {
          "when": "!inQuickOpen && !inMenuBar && !inPanel && resourceExtname == .feature ",
          "command": "testRunner.runCurrentFeature",
          "title": "Run feature",
          "group": "navigation@-1002"
        },
        {
          "when": "resourceExtname == .feature",
          "command": "testRunner.runPullReqestFailingScenarios",
          "title": "Run failing scenarios of Pull Request",
          "group": "navigation@-1003"
        },
        {
          "when": "resourceExtname == .feature ",
          "command": "testRunner.runScenariosAfterwards",
          "title": "Run from current scenario",
          "group": "navigation@-1004"
        },
        {
          "when": "resourceExtname == .feature ",
          "command": "testRunner.runTillFailedScenario",
          "title": "Run failed feature till failed scenario",
          "group": "navigation@-1005"
        },
        {
          "when": "resourceExtname == .feature",
          "command": "testRunner.runFailedFeature",
          "title": "Run failed feature file",
          "group": "navigation@-1006"
        }
      ]
    },
    "configuration": {
      "title": "Step Definition Generator",
      "properties": {
        "testRunner.runner": {
          "order": 1,
          "type": "string",
          "default": "cypress",
          "enum": [
            "cypress",
            "playwright",
            "cucumberjs"
          ],
          "description": "The testing framework used for step deinitions"
        },
        "testRunner.language": {
          "order": 2,
          "type": "string",
          "default": "typescript",
          "enum": [
            "javascript",
            "typescript"
          ],
          "description": "The programing language used for step deinitions"
        },
        "testRunner.arrow": {
          "order": 3,
          "type": "boolean",
          "default": true,
          "description": "Generate step definitions using either arrow or regular functions."
        },
        "testRunner.async": {
          "order": 4,
          "type": "boolean",
          "default": false,
          "description": "Generate step definitions using either async or sync functions."
        }
      }
    }
  },
  "scripts": {
    "test": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. --extensionTestsPath=dist/web/test/suite/index.js",
    "pretest": "npm run compile-web",
    "testGithubApi": "tsc && node ./dist/web/test/githubAPI.js",
    "vscode:prepublish": "npm run package-web",
    "compile-web": "webpack",
    "watch-web": "webpack --watch",
    "package-web": "webpack --mode production --devtool hidden-source-map",
    "lint": "eslint src --ext ts",
    "run-in-browser": "vscode-test-web --browserType=chromium --extensionDevelopmentPath=. ."
  },
  "devDependencies": {
    "@types/mocha": "^10.0.1",
    "@types/node": "^20.3.3",
    "@types/vscode": "^1.79.0",
    "@types/webpack-env": "^1.18.1",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "@vscode/test-web": "^0.0.44",
    "assert": "^2.0.0",
    "eslint": "^8.41.0",
    "fs": "^0.0.1-security",
    "mocha": "^10.2.0",
    "process": "^0.11.10",
    "read-file": "^0.2.0",
    "ts-loader": "^9.4.3",
    "typescript": "^5.1.3",
    "webpack": "^5.85.0",
    "webpack-cli": "^5.1.1"
  },
  "dependencies": {
    "axios": ">=1.6.0",
    "chalk": "^5.3.0",
    "save": "^2.9.0"
  }
}
